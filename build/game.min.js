/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 3);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Function.prototype.bind = function(bind) {
	var self = this;
	return function(){
		var args = Array.prototype.slice.call(arguments);
		return self.apply(bind || null, args);
	};
};

//canvas framework
window.CFW = {
	scene: null,
	CONFIG: {
		DEBUG: true,
	},
	resources: [],
	$: function(selector) {
		return selector.charAt(0) == '#' ? document.getElementById(selector.substr(1)) : document.getElementsByTagName(selector);
	},
	$new: function(name) {
		return document.createElement(name);
	},
	isObject: function(obj) {
		return obj != null && typeof(obj) == 'object';
	},
	isPlainObject: function(obj) {
		return Object.prototype.toString(obj) == '[object Object]';
	},
	//判断是否是function
	isFunction: function(source) {
		// chrome下,'function' == typeof /a/ 为true.
		return '[object Function]' == Object.prototype.toString.call(source);
	},
};
//判断是否支持 requestAnimationFrame
if (window.requestAnimationFrame) {
	let id = 1,
		anims = {};
	CFW.setAnimation = function(callback, ele) {
		let current = id++;
		anims[current] = true;
		let animate = function() {
			if (!anims[current]) {
				throw ('看看有没有~');
				return;
			}
			window.requestAnimationFrame(animate, ele);
			callback();
		};
		window.requestAnimationFrame(animate, ele);
		return current;
	};
	CFW.clearAnimation = function(id) {
		delete anims[id];
	};
} else {
	//估计就该死的ie了
	CFW.setAnimation = function(callback, element) {
		return window.setInterval(callback, 1000 / 60);
	};
	CFW.clearAnimation = function(id) {
		window.clearInterval(id);
	};
};

/* harmony default export */ __webpack_exports__["a"] = (CFW);

/***/ }),
/* 1 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Timer__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Debug__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__System__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__Animation__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__AnimationSheet__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__Loader__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__Image__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__Entity__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__Scene__ = __webpack_require__(11);











__WEBPACK_IMPORTED_MODULE_0__Core__["a" /* default */].System = __WEBPACK_IMPORTED_MODULE_3__System__["a" /* default */];

__WEBPACK_IMPORTED_MODULE_0__Core__["a" /* default */].Timer = __WEBPACK_IMPORTED_MODULE_1__Timer__["a" /* default */];
__WEBPACK_IMPORTED_MODULE_0__Core__["a" /* default */].Timer.time = Number.MIN_VALUE;
__WEBPACK_IMPORTED_MODULE_0__Core__["a" /* default */].Timer.timeScale = 1;
__WEBPACK_IMPORTED_MODULE_0__Core__["a" /* default */].Timer.maxStep = 0.05;
let _last = 0;
__WEBPACK_IMPORTED_MODULE_0__Core__["a" /* default */].Timer.step = function() {
    let current = Date.now();
    let delta = (current - _last) / 1000;
    __WEBPACK_IMPORTED_MODULE_0__Core__["a" /* default */].Timer.time += Math.min(delta, __WEBPACK_IMPORTED_MODULE_0__Core__["a" /* default */].Timer.maxStep) * __WEBPACK_IMPORTED_MODULE_0__Core__["a" /* default */].Timer.timeScale;
    _last = current;
};

__WEBPACK_IMPORTED_MODULE_0__Core__["a" /* default */].Debug = __WEBPACK_IMPORTED_MODULE_2__Debug__["a" /* default */];

__WEBPACK_IMPORTED_MODULE_0__Core__["a" /* default */].Animation = __WEBPACK_IMPORTED_MODULE_4__Animation__["a" /* default */];
__WEBPACK_IMPORTED_MODULE_0__Core__["a" /* default */].AnimationSheet = __WEBPACK_IMPORTED_MODULE_5__AnimationSheet__["a" /* default */];

__WEBPACK_IMPORTED_MODULE_0__Core__["a" /* default */].Loader = __WEBPACK_IMPORTED_MODULE_6__Loader__["a" /* default */];

__WEBPACK_IMPORTED_MODULE_0__Core__["a" /* default */].Image = __WEBPACK_IMPORTED_MODULE_7__Image__["a" /* default */];
__WEBPACK_IMPORTED_MODULE_0__Core__["a" /* default */].Image.drawCount = 0;

__WEBPACK_IMPORTED_MODULE_0__Core__["a" /* default */].Entity = __WEBPACK_IMPORTED_MODULE_8__Entity__["a" /* default */];
__WEBPACK_IMPORTED_MODULE_0__Core__["a" /* default */].Entity._lastId = 0;

__WEBPACK_IMPORTED_MODULE_0__Core__["a" /* default */].Scene = __WEBPACK_IMPORTED_MODULE_9__Scene__["a" /* default */];

__WEBPACK_IMPORTED_MODULE_0__Core__["a" /* default */].main = function(canvasID, mainClass, width, height, scale, loaderClass) {
    __WEBPACK_IMPORTED_MODULE_0__Core__["a" /* default */].debug = new __WEBPACK_IMPORTED_MODULE_2__Debug__["a" /* default */]();
    __WEBPACK_IMPORTED_MODULE_0__Core__["a" /* default */].system = new __WEBPACK_IMPORTED_MODULE_3__System__["a" /* default */](canvasID, width, height, scale);

    __WEBPACK_IMPORTED_MODULE_0__Core__["a" /* default */].res = new(loaderClass || __WEBPACK_IMPORTED_MODULE_0__Core__["a" /* default */].Loader)(mainClass, __WEBPACK_IMPORTED_MODULE_0__Core__["a" /* default */].resources);
    __WEBPACK_IMPORTED_MODULE_0__Core__["a" /* default */].res.load();
};

/* harmony default export */ __webpack_exports__["a"] = (__WEBPACK_IMPORTED_MODULE_0__Core__["a" /* default */]);

/***/ }),
/* 2 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Core__ = __webpack_require__(0);


class Animation {
	constructor(sheet, frameTime, sequence, isStop) {
		this.sheet = sheet;
		this.frameTime = frameTime;
		this.sequence = sequence;
		this.isStop = isStop;
		this.tile = this.sequence[0];
		//翻转
		this.flip = {
			x: false,
			y: false
		};
		//中心点
		this.pivot = {
			x: 0,
			y: 0
		};
		//透明度
		this.alpha = 1;
		//角度
		this.angle = 0;

		//计时器
		this.timer = new __WEBPACK_IMPORTED_MODULE_0__Core__["a" /* default */].Timer();

		this.loopCount = 0;
		this.frame = 0;
	};
	update() {
		let frameTotal = Math.floor(this.timer.delta() / this.frameTime);
		this.loopCount = Math.floor(frameTotal / this.sequence.length);
		if (this.isStop && this.loopCount > 0) {
			this.frame = this.sequence.length - 1;
		} else {
			this.frame = frameTotal % this.sequence.length;
		};
		this.tile = this.sequence[this.frame];
	};
	draw(targetX = 0, targetY = 0) {
		if (this.angle == 0) {
			this.sheet.image.drawTile(
				targetX,
				targetY,
				this.tile,
				this.sheet.width,
				this.sheet.height,
				this.flip.x,
				this.flip.y
			);
		} else {

		}
	}
};

// CFW.Animation = Animation;

/* harmony default export */ __webpack_exports__["a"] = (Animation);

/***/ }),
/* 3 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__CFW_Main__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__scene_MainScene__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__resource__ = __webpack_require__(15);


//加载main场景 一般是主画面




let innerWidth = window.innerWidth; //480
let innerHeight = window.innerHeight; //320
let scale = innerWidth / 640;

__WEBPACK_IMPORTED_MODULE_0__CFW_Main__["a" /* default */].main('#canvas', __WEBPACK_IMPORTED_MODULE_1__scene_MainScene__["a" /* default */], innerWidth, innerHeight, scale);

/***/ }),
/* 4 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Core__ = __webpack_require__(0);


class Timer {
	constructor(seconds = 0) {
		this.target = seconds;
		this.base = __WEBPACK_IMPORTED_MODULE_0__Core__["a" /* default */].Timer.time;
		this.last = __WEBPACK_IMPORTED_MODULE_0__Core__["a" /* default */].Timer.time;
		this.pausedAt = 0;
	};
	//变量增量
	delta() {
		return (this.pausedAt || __WEBPACK_IMPORTED_MODULE_0__Core__["a" /* default */].Timer.time) - this.base - this.target;
	}
};



/* harmony default export */ __webpack_exports__["a"] = (Timer);

/***/ }),
/* 5 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Core__ = __webpack_require__(0);

class Debug {
	constructor() {
		this.debugTime = 0;
		this.debugTickAvg = 0.016;
		this.debugRealTime = Date.now();

		this.init();
	};
	init() {
		this.container = __WEBPACK_IMPORTED_MODULE_0__Core__["a" /* default */].$new('div');
		this.container.className = 'cfw_debug';
		__WEBPACK_IMPORTED_MODULE_0__Core__["a" /* default */].$('body')[0].appendChild(this.container);

		this.canvasContainer = __WEBPACK_IMPORTED_MODULE_0__Core__["a" /* default */].$new('canvas');
		this.canvasContainer.className = 'cfw_debug_starts';
		this.container.appendChild(this.canvasContainer);

		this.getCanvas(this.canvasContainer);

	};
	getCanvas(canvas) {
		this.canvas = canvas;
		this.context = canvas.getContext('2d');
		this.canvas.width = window.innerWidth;
		this.canvas.height = 150;
	};
	text(data) {
		let context = this.context;
		context.save(); //save和restore可以保证样式属性只运用于该段canvas元素
		context.fillStyle = '#fff';
		context.font = "20px Arial"; //设置字体大小和字体
		//绘制字体，并且指定位置
		let _w = this.canvas.width / data.length;
		data.forEach(function(value, index) {
			context.fillText(value.name + ':' + value.number, index * _w, 20);
		});

		context.stroke(); //执行绘制
		context.restore();
	};

	beforeRun() {
		let timeBeforeRun = Date.now();
		this.debugTickAvg = this.debugTickAvg * 0.8 + (timeBeforeRun - this.debugRealTime) * 0.2;
		this.debugRealTime = timeBeforeRun;
	};
	afterRun() {
		let frameTime = Date.now() - this.debugRealTime;
		let nextFrameDue = (1000 / __WEBPACK_IMPORTED_MODULE_0__Core__["a" /* default */].CONFIG.FPS) - frameTime;

		this.debugTime = this.debugTime * 0.8 + frameTime * 0.2;

		let _ms = this.debugTime.toFixed(2);

		let _fps = Math.round(1000 / this.debugTickAvg);
		//draws
		//entities
		let _entities = 0;
		if (__WEBPACK_IMPORTED_MODULE_0__Core__["a" /* default */].scene && __WEBPACK_IMPORTED_MODULE_0__Core__["a" /* default */].scene.entities) {
			_entities = __WEBPACK_IMPORTED_MODULE_0__Core__["a" /* default */].scene.entities.length;
		}

		this.run([{
			name: 'ms',
			number: _ms
		}, {
			name: 'fps',
			number: _fps
		}, {
			name: 'entities',
			number: _entities
		}, {
			name: 'draw',
			number: __WEBPACK_IMPORTED_MODULE_0__Core__["a" /* default */].Image.drawCount
		}]);

		__WEBPACK_IMPORTED_MODULE_0__Core__["a" /* default */].Image.drawCount = 0;
	};
	run(data) {
		this.context.fillStyle = '#000';
		this.context.fillRect(0, 0, this.canvas.width, this.canvas.height);

		this.text(data);

	}
};
// CFW.Debug = Debug;
/* harmony default export */ __webpack_exports__["a"] = (Debug);

/***/ }),
/* 6 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Core__ = __webpack_require__(0);


class System {
	constructor(canvas, width, height, scale = 1) {
		//是否运行
		this.running = false;
		//新场景类
		this.newSceneClass = null;
		this.delegate = null;

		this.canvas = __WEBPACK_IMPORTED_MODULE_0__Core__["a" /* default */].$(canvas);
		this.context = this.canvas.getContext('2d');

		this.scale = scale;

		this.resize(width, height, scale);
	};
	resize(width, height, scale) {
		this.width = width;
		this.height = height;

		// this.realWidth = this.width * scale;
		// this.realHeight = this.height * scale;

		this.canvas.width = this.width;
		this.canvas.height = this.height;
	};

	setScene(sceneClass) {
		if (this.running) {
			this.newSceneClass = sceneClass;
		} else {
			this.setNowScene(sceneClass);
		}
	};
	setNowScene(sceneClass) {
		__WEBPACK_IMPORTED_MODULE_0__Core__["a" /* default */].scene = new sceneClass;
		this.setDelegate(__WEBPACK_IMPORTED_MODULE_0__Core__["a" /* default */].scene);
	};
	setDelegate(scene) {
		if (typeof(scene.run) == 'function') {
			this.delegate = scene;
			this.startRun();
		} else {
			throw ('System.setDelegate:no run() function')
		}
	};
	startRun() {
		let _this = this;
		// this.run();
		__WEBPACK_IMPORTED_MODULE_0__Core__["a" /* default */].setAnimation(function() {
			_this.run();
		}, this.canvas);
		this.running = true;
	};
	stopRun() {
		this.running = false;
	};
	run() {
		//计时器
		__WEBPACK_IMPORTED_MODULE_0__Core__["a" /* default */].Timer.step();

		if (__WEBPACK_IMPORTED_MODULE_0__Core__["a" /* default */].CONFIG.DEBUG) {
			__WEBPACK_IMPORTED_MODULE_0__Core__["a" /* default */].debug.beforeRun();
		}


		this.delegate.run();
		//判断是否是新场景 是就切换
		if (this.newSceneClass) {
			this.setNowScene(this.newSceneClass);
			this.newSceneClass = null;
		}
		if (__WEBPACK_IMPORTED_MODULE_0__Core__["a" /* default */].CONFIG.DEBUG) {
			__WEBPACK_IMPORTED_MODULE_0__Core__["a" /* default */].debug.afterRun();
		}
	};
	clear(color) {
		this.context.fillStyle = color;
		this.context.fillRect(0, 0, this.width, this.height);
	}

};

// CFW.System = System;
/* harmony default export */ __webpack_exports__["a"] = (System);

/***/ }),
/* 7 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Core__ = __webpack_require__(0);


class AnimationSheet {
	constructor(name, width = 4, height = 4) {
		this.width = width;
		this.height = height;
		this.image = __WEBPACK_IMPORTED_MODULE_0__Core__["a" /* default */].res.getImage(name);//new CFW.Image(path);
	}
};
// CFW.AnimationSheet = AnimationSheet;
/* harmony default export */ __webpack_exports__["a"] = (AnimationSheet);

/***/ }),
/* 8 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Core__ = __webpack_require__(0);

class Loader {
    constructor(mainClass, resources) {
        this.mainClass = mainClass;
        this.resources = resources;
        this.imagesList = {};
        this.audioList = {};

        this.loadCount = 0;
        this.resourceCount = this.resources.length;

        this._drawStatus = 0;
        this._intervalId = 0;
    };
    load() {
        //默认设置黑色背景
        __WEBPACK_IMPORTED_MODULE_0__Core__["a" /* default */].system.clear('#000');

        let _self = this;
        //遍历资源
        _self.resources.forEach(function(item, index) {
            _self.loadType(item, _self.onload, _self.onerror);
        });

        this._intervalId = setInterval(this.draw.bind(this), 16);
    };
    //加载完成回调
    onload() {
        this.loadCount++;
        this.checkLoadStatus();
    };
    onerror() {
        console.log('img error:');
    };
    //检查加载状态
    checkLoadStatus() {
        if (this.loadCount == this.resourceCount) {
            setTimeout(this.end.bind(this), 250);
        }
    };


    getLoadProgress() {
        return this.loadCount / this.resourceCount;
    }
    loadType(res, onload, onerror) {

        switch (res.type) {
            case "image":
                this.imagesList[res.name] = new __WEBPACK_IMPORTED_MODULE_0__Core__["a" /* default */].Image(res.src, onload.bind(this), onerror.bind(this));
                return 1;
            case "audio":

                return 1;
            default:
                throw "load : unknown or invalid resource type : " + res.type;
        }
    }
    getImage(name){
        return this.imagesList[name];
    }
    end() {
        clearInterval(this._intervalId);
        console.log('加载完成了');
        __WEBPACK_IMPORTED_MODULE_0__Core__["a" /* default */].system.setScene(this.mainClass);
    }
    draw() {

        this._drawStatus = this.getLoadProgress(); //+= (this.status - this._drawStatus) / 5;
        // console.log(this._drawStatus);
        var s = __WEBPACK_IMPORTED_MODULE_0__Core__["a" /* default */].system.scale;
        var w = __WEBPACK_IMPORTED_MODULE_0__Core__["a" /* default */].system.width * 0.6;
        var h = __WEBPACK_IMPORTED_MODULE_0__Core__["a" /* default */].system.height * 0.1;
        var x = __WEBPACK_IMPORTED_MODULE_0__Core__["a" /* default */].system.width * 0.5 - w / 2;
        var y = __WEBPACK_IMPORTED_MODULE_0__Core__["a" /* default */].system.height * 0.5 - h / 2;

        // console.log(s, w, h, x, y);

        __WEBPACK_IMPORTED_MODULE_0__Core__["a" /* default */].system.context.fillStyle = '#000';
        __WEBPACK_IMPORTED_MODULE_0__Core__["a" /* default */].system.context.fillRect(0, 0, 480, 320);

        __WEBPACK_IMPORTED_MODULE_0__Core__["a" /* default */].system.context.fillStyle = '#fff';
        __WEBPACK_IMPORTED_MODULE_0__Core__["a" /* default */].system.context.fillRect(x * s, y * s, w * s, h * s);

        __WEBPACK_IMPORTED_MODULE_0__Core__["a" /* default */].system.context.fillStyle = '#000';
        __WEBPACK_IMPORTED_MODULE_0__Core__["a" /* default */].system.context.fillRect(x * s + s, y * s + s, w * s - s - s, h * s - s - s);

        console.log(w * s * this._drawStatus);
        __WEBPACK_IMPORTED_MODULE_0__Core__["a" /* default */].system.context.fillStyle = '#fff';
        __WEBPACK_IMPORTED_MODULE_0__Core__["a" /* default */].system.context.fillRect(x * s, y * s, w * s * this._drawStatus, h * s);
    }
};
/* harmony default export */ __webpack_exports__["a"] = (Loader);

/***/ }),
/* 9 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Core__ = __webpack_require__(0);

class ImageManage {
	constructor(path, _onload, _onerror) {
		this.path = path;
		this.loaded = false;

		this._onload = _onload;
		this._onerror = _onerror;

		this.load();
	};
	load() {
		console.log(this.loaded);
		let _this = this;
		_this.data = new Image();
		_this.data.onload = function() {
			_this.loaded = true;
			_this.width = _this.data.width;
			_this.height = _this.data.height;
			//判断是否有onload方法
			if (__WEBPACK_IMPORTED_MODULE_0__Core__["a" /* default */].isFunction(_this._onload)) {
				_this._onload();
			}
		};
		_this.data.onerror = function() {
			console.log('load error');
			//判断是否有onload方法
			if (__WEBPACK_IMPORTED_MODULE_0__Core__["a" /* default */].isFunction(_this._onerror)) {
				_this._onerror();
			}
		};
		_this.data.src = this.path;
	};
	draw(targetX = 0, targetY = 0, sourceX = 0, sourceY = 0, width, height) {
		if (!this.loaded) {
			return;
		};
		let scale = __WEBPACK_IMPORTED_MODULE_0__Core__["a" /* default */].system.scale;
		sourceX = sourceX * scale;
		sourceY = sourceY * scale;

		width = (width || this.width) * scale;
		height = (height || this.height) * scale;

		// let
		__WEBPACK_IMPORTED_MODULE_0__Core__["a" /* default */].system.context.drawImage(
			this.data,
			sourceX,
			sourceY,
			width,
			height,
			targetX,
			targetY,
			width,
			height
		);
		__WEBPACK_IMPORTED_MODULE_0__Core__["a" /* default */].Image.drawCount++;
	};
	drawTile(targetX, targetY, tile, tileWidth, tileHeight, flipX, flipY) {
		if (!this.loaded || tileWidth > this.width || tileHeight > this.height) {
			return;
		}

		let tileWidthScaled = tileWidth;
		let tileHeightScaled = tileHeight;

		let scaleX = flipX ? -1 : 1;
		let scaleY = flipY ? -1 : 1;

		__WEBPACK_IMPORTED_MODULE_0__Core__["a" /* default */].system.context.drawImage(
			this.data,
			Math.floor(tile * tileWidth) % this.width,
			Math.floor(tile * tileWidth / this.width) * tileHeight,
			tileWidthScaled,
			tileHeightScaled,
			targetX * scaleX - (flipX ? tileWidthScaled : 0),
			targetY * scaleY - (flipY ? tileHeightScaled : 0),
			tileWidthScaled,
			tileHeightScaled
		);

		__WEBPACK_IMPORTED_MODULE_0__Core__["a" /* default */].Image.drawCount++;
	};
};


// CFW.Image = ImageManage;
// CFW.Image.drawCount = 0;

/* harmony default export */ __webpack_exports__["a"] = (ImageManage);

/***/ }),
/* 10 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Animation__ = __webpack_require__(2);


class Entity {
	constructor(x = 0, y = 0, settings = {}) {
		this.pos = {};
		this.id = ++__WEBPACK_IMPORTED_MODULE_0__Core__["a" /* default */].Entity._lastId;
		this.pos.x = x;
		this.pos.y = y;
		this.settings = settings;
		this.animSheet = null;
		this.currentAnim = null;
		this.anims = {};
	};
	/*
	 *添加动画
	 *name 动画名称
	 *frameTime 1帧/时间
	 *sequence 动画序列
	 *isStop 最后一帧是否停止
	 */
	addAnim(name, frameTime, sequence, isStop = false) {
		if (!this.animSheet) {
			throw ('没有定义animSheet');
		}
		let anim = new __WEBPACK_IMPORTED_MODULE_1__Animation__["a" /* default */](this.animSheet, frameTime, sequence, isStop);
		this.anims[name] = anim;
		if (!this.currentAnim) {
			this.currentAnim = anim;
		};
		return anim;
	};
	draw() {
		if (this.currentAnim) {
			this.currentAnim.draw(this.pos.x, this.pos.y);
		}
	};
	update() {
		if (this.currentAnim) {
			this.currentAnim.update();
		}
	};
	kill() {
		__WEBPACK_IMPORTED_MODULE_0__Core__["a" /* default */].scene.removeEntity(this);
	};

};
// CFW.Entity = Entity;
// CFW.Entity._lastId = 0;

/* harmony default export */ __webpack_exports__["a"] = (Entity);

/***/ }),
/* 11 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Core__ = __webpack_require__(0);

class Scene {
	constructor() {
		this.clearColor = '#000000';
		this.entities = [];
		this._deferredkill = [];
	};
	spawnEntity(entityClass, x, y, settings = {}) {
		let ent = new(entityClass)(x, y, settings);
		this.entities.push(ent);
		return ent;
	};
	removeEntity(ent) {
		ent._killed = true;
		this._deferredkill.push(ent);
	};
	draw() {
		// console.log('Scene draw');
		if (this.clearColor) {
			__WEBPACK_IMPORTED_MODULE_0__Core__["a" /* default */].system.clear(this.clearColor);
		};
		this.drawEntities();
	};
	drawEntities() {
		for (let i = 0; i < this.entities.length; i++) {
			let ent = this.entities[i];
			ent.draw();
		}
	};
	update() {
		// console.log('Scene update');
		this.updateEntities();

		for (let i = 0; i < this._deferredkill.length; i++) {
			let ent = this._deferredkill[i];
			for (let ii = this.entities.length; ii--;) {
				if (this.entities[ii] === ent) {
					this.entities.splice(ii, 1);
				}
			}
		};
		this._deferredkill = [];
	};
	updateEntities() {
		for (let i = 0; i < this.entities.length; i++) {
			let ent = this.entities[i];
			if (!ent._killed) {
				ent.update();
			}
		}
	};
	run() {
		this.draw();
		this.update();
	};
};
// CFW.Scene = Scene;
/* harmony default export */ __webpack_exports__["a"] = (Scene);

/***/ }),
/* 12 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__CFW_Main__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__entity_Particle__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__entity_ADemo__ = __webpack_require__(14);




//定义一个demo场景
class MainScene extends __WEBPACK_IMPORTED_MODULE_0__CFW_Main__["a" /* default */].Scene {
    constructor() {
        super();
        this.clearColor = '#000';
        this.sceneName = 'Fireworks';
        this._index = 0;
        console.log('初始化');

        console.log(__WEBPACK_IMPORTED_MODULE_0__CFW_Main__["a" /* default */]);
        this.demoimage = __WEBPACK_IMPORTED_MODULE_0__CFW_Main__["a" /* default */].res.getImage('img1');
        this.demoimage1 = __WEBPACK_IMPORTED_MODULE_0__CFW_Main__["a" /* default */].res.getImage('img2');


        this.spawnEntity(__WEBPACK_IMPORTED_MODULE_2__entity_ADemo__["a" /* default */]);


        // var _self = this;
        // this.timer = new CFW.Timer(1);

        // var x = Math.ceil(Math.random() * 500);
        // var y = Math.ceil(Math.random() * 300);


        // this.showFireworks(x, y);

    };
    showFireworks(x, y) {
        for (var i = 0; i < 30; i++) {
            this.spawnEntity(__WEBPACK_IMPORTED_MODULE_1__entity_Particle__["a" /* default */], x, y, {
                fixedSpeed: true,
                colorR: '255',
                colorG: '255',
                colorB: '255',
            });
        };
        for (var i = 0; i < 20; i++) {
            this.spawnEntity(__WEBPACK_IMPORTED_MODULE_1__entity_Particle__["a" /* default */], x, y, {
                initSpeed: 0.5,
                colorR: '255',
                colorG: '255',
                colorB: '255',
            });
        };
        for (var i = 0; i < 20; i++) {
            this.spawnEntity(__WEBPACK_IMPORTED_MODULE_1__entity_Particle__["a" /* default */], x, y, {
                initSpeed: 1,
                fixedSpeed: true,
                colorR: '255',
                // colorG: '255',
                colorB: '255',
            });
        };
    };
    draw() {
        super.draw(); //继承父函数 一般来说都继承 不写就是覆盖重构
        // this.demoimage.draw();
        // this.demoimage1.draw();
    };
    update() {
        super.update();
    };
};
/* harmony default export */ __webpack_exports__["a"] = (MainScene);

/***/ }),
/* 13 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

//定义烟花颗粒
class Particle extends CFW.Entity {
    constructor(x = 0, y = 0, settings = {}) {
        super(x, y, settings);


        this.ctx = CFW.system.context;
        //是否固定速度
        this.fixedSpeed = this.settings.fixedSpeed || false;
        //初始化速度
        this.initSpeed = this.settings.initSpeed || 4.5;
        //位置xy
        this.x = x;
        this.y = y;

        //颜色RGB
        this.colorR = this.settings.colorR || ~~(Math.random() * 255);
        this.colorG = this.settings.colorG || ~~(Math.random() * 255);
        this.colorB = this.settings.colorB || ~~(Math.random() * 255);

        //透明度
        this.colorAlpha = this.settings.alpha || 0.5; //0.05
        //圆角
        this.radius = this.settings.radius || 1 + Math.random();
        //速度
        let _speed = (Math.random() * 2 + 0.6);
        this.speed = this.settings.speed || Math.random() * _speed + 0.1;
        if (this.fixedSpeed) {
            this.speed = 1;
        };
        //角度
        this.angle = this.settings.angle || Math.random() * 360;
        //重力
        this.gravity = 1;
        //向量
        this.velocityX = Math.cos(this.angle) * this.speed;
        this.velocityY = Math.sin(this.angle) * this.speed; //+ this.gravity

        this.initVX = this.velocityX;
        this.initVY = this.velocityY;
        //开始时间
        this.startTime = new Date().getTime();
        //期间
        this.duration = Math.random() * 300 + 600;
        //目前期间
        this.currentDuration = 0;
        //减缓速度
        this.dampening = 30;
        //初始颜色
        this.color = this.getColor();
    };
    getColor(r, g, b, a) {
        return 'rgba(' + (r || this.colorR) + ', ' + (g || this.colorG) + ', ' + (b || this.colorB) + ', ' + (a || this.colorAlpha) + ')';
    };
    draw() {
        let ctx = this.ctx;

        ctx.beginPath();
        ctx.fillStyle = this.color;

        ctx.arc(this.x, this.y, this.radius, Math.PI * 2, false);
        //阴影模糊
        ctx.shadowBlur = 8;
        ctx.shadowColor = this.getColor(this.colorR + 150, this.colorG + 150, this.colorB + 150, 1);

        ctx.fill();
    };
    update() {
        this.currentDuration = new Date().getTime() - this.startTime;

        if (this.currentDuration <= 200) {
            this.colorAlpha += 0.01;
            this.x += this.initVX * this.initSpeed;
            this.y += this.initVY * this.initSpeed;
            this.color = this.getColor(240, 240, 240, .9);
        } else {
            this.x += this.velocityX;
            this.y += this.velocityY;
            this.color = this.getColor(this.colorR, this.colorG, this.colorB, 0.4 + Math.random() * 0.3);
        };

        this.velocityY += this.gravity / 1000;

        if (this.currentDuration >= this.duration) {
            this.velocityX -= this.velocityX / this.dampening;
            this.velocityY -= this.velocityY / this.dampening;
        };

        if (this.currentDuration >= this.duration + this.duration / 1.1) {
            this.colorAlpha -= 0.02;
            this.color = this.getColor();
            if (this.colorAlpha <= 0) {
                this.kill();
            }
        } else {
            if (this.colorAlpha < 1) {
                this.colorAlpha += 0.03;
            }
        };
    };
};

/* harmony default export */ __webpack_exports__["a"] = (Particle);

/***/ }),
/* 14 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
class AnimDemo extends CFW.Entity {
    constructor(x = 0, y = 0, settings = {}) {
        super(x, y, settings);
        this.animSheet = new CFW.AnimationSheet('img4', 16, 16);
        this.addAnim('demo', 0.2, [0, 1, 2, 3]);
        // this.timer = new CFW.Timer(1);
    }
    draw() {
        super.draw();
    }
    update() {
        super.update();
        this.pos.x += 1;
    }
};
/* harmony default export */ __webpack_exports__["a"] = (AnimDemo);

/***/ }),
/* 15 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__CFW_Main__ = __webpack_require__(1);

__WEBPACK_IMPORTED_MODULE_0__CFW_Main__["a" /* default */].resources = [
    { name: "img1",  type:"image", src: "http://sedn.egret.com/ueditor/20150528/5566962568005.png" },
    { name: "img2",  type:"image", src: "./resource/Sky.png" },
    { name: "img3",  type:"image", src: "http://pic.jj20.com/up/allimg/811/0QG4150121/140QG50121-4.jpg" },
    { name: "img4",  type:"image", src: "./resource/blob.png" },
];
/* unused harmony default export */ var _unused_webpack_default_export = (__WEBPACK_IMPORTED_MODULE_0__CFW_Main__["a" /* default */]);

/***/ })
/******/ ]);